@use 'colors' as c;
@use 'variables' as v;
@use 'mixins' as m;

:host {
	/**
	 * @tokens Movie Color
	 * @presenter Color
	*/

	--cf-movie-color: #{c.$night};
	--cf-movie-title-color: #{c.$white};
	--cf-movie-paragraph-color: #ffffffb8;

	/**
	 * @tokens Movie Spacing
	 * @presenter Spacing
	*/

	--cf-movie-padding: #{v.$sp-regular};
	--cf-movie-space: #{v.$sp-semi-small};
	--cf-movie-image-size: 26rem;
	--cf-movie-content-space: #{v.$sp-small};
	--cf-movie-text-space: #{v.$sp-tiny};

	/**
	 * @tokens Movie BorderRadius
	 * @presenter BorderRadius
	*/

	--cf-movie-shape: #{v.$sp-large};
	--cf-movie-image-shape: calc(var(--cf-movie-shape) / 2);

	/**
	 * @tokens Movie FontSize
	 * @presenter FontSize
	*/

	--cf-movie-title-font-size: #{v.$fs-regular};
	--cf-movie-paragraph-font-size: #{v.$fs-extra-small};

	/**
	 * @tokens Movie FontWeight
	 * @presenter FontWeight
	*/

	--cf-movie-title-font-weight: 500;

	/**
	 * @tokens-end
	*/

	--tui-font-text-m: normal #{v.$fs-regular} / 1 var(--tui-font-text);
	@include m.size(19rem, fit-content);
	@include m.flex;
	border-radius: var(--cf-movie-shape);
	background-color: var(--cf-movie-color);
	transition: all 0.2s ease-in-out;

	&:hover {
		translate: 0px -0.25rem;
		box-shadow: 0 0 2.25rem transparentize($color: c.$night, $amount: 0.7);
	}
}

[tuiCardLarge][data-space][data-space='normal'] {
	--t-radius: var(--cf-movie-shape);
	--t-padding: var(--cf-movie-padding);
	--t-space: var(--cf-movie-space);
}

a {
	@include m.square(100%);
	@include m.flex(space-between, stretch, column, wrap);
	border-radius: inherit;

	> picture {
		position: relative;
		flex: 1;
		flex-basis: var(--cf-movie-image-size);
		border-radius: var(--cf-movie-image-shape);

		img {
			@include m.square(100%);
			object-fit: cover;
			border-radius: inherit;
		}
	}

	> section {
		@include m.flex(space-between, stretch, column, wrap, var(--cf-movie-content-space));

		> div {
			@include m.flex(flex-start, stretch, column, wrap, var(--cf-movie-text-space));

			tui-line-clamp[title] {
				color: var(--cf-movie-title-color);
				font-weight: var(--cf-movie-title-font-weight);
			}
		}

		> p {
			@include m.flex(flex-start, center, row, wrap, var(--cf-movie-text-space));

			span {
				display: inline-block;
			}
		}
	}
}

.paragraph {
	color: var(--cf-movie-paragraph-color);
	font-size: var(--cf-movie-paragraph-font-size);
}

.general {
	color: c.$spring-green;
}

.parental-guidance {
	color: c.$sunglow;
}

.parental-guidance-13 {
	color: c.$brilliant-rose;
}

.restricted {
	color: c.$folly;
}

.adults-only {
	color: c.$deep-sky-blue;
}

.skeleton {
	background-color: c.$platinum;
	border-radius: v.$sp-large;
	padding: v.$sp-regular;
	animation: loading-skeleton ease-in-out 0.8s infinite alternate;
	@include m.size(298px, 516px);
	@include m.flex(space-between, stretch, column, wrap, v.$sp-semi-small);

	&__image {
		flex: 1;
		border-radius: calc(v.$sp-large / 2);
		background-color: c.$platinum;
	}

	&__content {
		@include m.flex(space-between, stretch, column, wrap, v.$sp-small);

		> div:first-child {
			@include m.flex(flex-start, stretch, column, wrap, v.$sp-tiny);
		}
	}

	&__title {
		@include m.skeleton-color($height: 1rem);
	}

	&__paragraph {
		@include m.skeleton-color($height: 0.875rem);
	}

	&__footer {
		@include m.skeleton-color(105px, 0.875rem);
	}
}
